 #include "GamePCH.h"
#include "../../Libraries/Framework/Source/Common/spritesheet.h"

Game::Game(Framework* pFramework)
    : GameCore(pFramework)
{
    // Initialization


}

Game::~Game()
{
    // deleting dynamically allocated data

}

void Game::OnSurfaceChanged(int width, int height)
{
    glViewport(0, 0, width, height);

    m_WindowWidth = width;
    m_WindowHeight = height;
}

void Game::LoadContent()
{
    // Seed random.
    srand((unsigned int)GetSystemTime());

    // Turn on depth buffer testing.
    glEnable(GL_DEPTH_TEST);
    glDepthFunc(GL_LEQUAL);

//LOAD ALL 




    CheckForGLErrors();
}

void Game::QueueEvent(Event* pEvent)
{
    m_EventQueue.push(pEvent);
}

void Game::ProcessEvents()
{
    while (m_EventQueue.size() != 0)
    {
        Event* pEvent = m_EventQueue.front();
        m_EventQueue.pop();

        OnEvent(pEvent);
        delete pEvent;
    }
}

void Game::OnEvent(Event* pEvent)
{

//IF m_ScreenSwitch is not true then
    if (!m_SceenSwitch)
    {
//m_Scene will have events

    }
    else
    {
//m_pSceneInfected will handle event

    }

//Send m_Controller to on Event
    m_Controllers[0].OnEvent(pEvent);

}

void Game::Update(float deltatime)
{
    // Process events at the start of the frame before updating anything else in the game.
    ProcessEvents();
//IF m_ScreenSwitch is not true then
    if (!m_SceenSwitch)
    {
//m_pScene is update
    
    }
    else
    {
//m_SceneInfected is updated

    }
	
}

void Game::Draw()
{
    // Clear the screen to dark blue.
    glClearColor(0.0f, 0.0f, 0.4f, 0.0f);
    glClear(GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT);

//IF m_ScreenSwitch is not true then
    if (!m_SceenSwitch)
    {
//m_pScene is drawn

    }
    else
    {
m_pSceneInfection-is drawn

    }
    // Draw the scene
    CheckForGLErrors();
}

